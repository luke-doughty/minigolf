/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'
import { RapierRigidBody, RigidBody } from '@react-three/rapier'
import { Vector3 } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    Cube001_Madeira_0: THREE.Mesh
    Cube001_Tecido_0: THREE.Mesh
    Cylinder_Madeira_0: THREE.Mesh
    Cylinder_Pedra_0: THREE.Mesh
    Cylinder001_Ferro_0: THREE.Mesh
    Cylinder002_Madeira_0: THREE.Mesh
    Cylinder002_Pedra_0: THREE.Mesh
    Cylinder003: THREE.Mesh
  }
  materials: {
    Madeira: THREE.MeshStandardMaterial
    Tecido: THREE.MeshStandardMaterial
    Pedra: THREE.MeshStandardMaterial
    Ferro: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

// type ActionName = 'Cube.001|Cube.001Action'
// type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Windmill(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null!)
  const animatedGroupRef = useRef<THREE.Group>(null!)

  const { nodes, materials, animations } = useGLTF('/windmill.glb') as GLTFResult
  const { actions, names } = useAnimations(animations, group)
  console.log(names)

  const rigidBodyRef = useRef<RapierRigidBody>(null!)
  const rigidBodyRotatingRef = useRef<RapierRigidBody>(null!)

  useEffect(() => {
    actions[names[0]]?.reset().play()
    console.log(actions[names[0]]?.getRoot())
  }, [])

  // something weird here

  // useFrame(() => {
  //   if (group.current && rigidBodyRotatingRef.current && animatedGroupRef) {
  //     const { quaternion } = animatedGroupRef.current
  //     const test = new THREE.Quaternion(
  //       quaternion.w,
  //       quaternion.y,
  //       quaternion.y,
  //       quaternion.z
  //     )
  //     rigidBodyRotatingRef.current.setRotation(test, true)
  //   }
  // })

  return (
    <group ref={group} {...props} dispose={null} name={'test'}>
      <RigidBody type='kinematicPosition' colliders='trimesh' ref={rigidBodyRef}>
        <group name='windmill'>
          <group name='Sketchfab_model' rotation={[-Math.PI / 2, 0, 0]}>
            <group
              name='e970439468ec4f669fc306908d57054efbx'
              rotation={[Math.PI / 2, 0, 0]}
              scale={0.01}
            >
              <group name='Object_2'>
                <group name='RootNode'>
                  <group
                    name='Camera001'
                    position={[735.889, 495.831, 692.579]}
                    rotation={[-Math.PI, 0.756, 2.68]}
                    scale={100}
                  >
                    <group name='Object_8' />
                  </group>
                  <RigidBody
                    type='kinematicVelocity'
                    colliders='trimesh'
                    ref={rigidBodyRotatingRef}
                  >
                    <group
                      ref={animatedGroupRef}
                      name='Cube001'
                      position={[0, 458.332, -137.054]}
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={100}
                    >
                      <mesh
                        name='Cube001_Madeira_0'
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube001_Madeira_0.geometry}
                        material={materials.Madeira}
                      />
                      <mesh
                        name='Cube001_Tecido_0'
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube001_Tecido_0.geometry}
                        material={materials.Tecido}
                      />
                    </group>
                  </RigidBody>
                  <group
                    name='Cylinder'
                    position={[0, 75.789, 0]}
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                  >
                    <mesh
                      name='Cylinder_Madeira_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder_Madeira_0.geometry}
                      material={materials.Madeira}
                    />
                    <mesh
                      name='Cylinder_Pedra_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder_Pedra_0.geometry}
                      material={materials.Pedra}
                    />
                  </group>
                  <group
                    name='Cylinder001'
                    position={[25.005, 49.1, -101.779]}
                    rotation={[-Math.PI, 0, 0]}
                    scale={8.039}
                  >
                    <mesh
                      name='Cylinder001_Ferro_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder001_Ferro_0.geometry}
                      material={materials.Ferro}
                    />
                  </group>
                  <group
                    name='Cylinder002'
                    position={[0, 458.332, -96.384]}
                    rotation={[-Math.PI, 0, 0]}
                    scale={23.999}
                  >
                    <mesh
                      name='Cylinder002_Madeira_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder002_Madeira_0.geometry}
                      material={materials.Madeira}
                    />
                    <mesh
                      name='Cylinder002_Pedra_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder002_Pedra_0.geometry}
                      material={materials.Pedra}
                    />
                  </group>
                  <group
                    name='Light001'
                    position={[263.866, 590.386, -100.545]}
                    rotation={[1.89, 0.881, -2.045]}
                    scale={100}
                  >
                    <group name='Object_5' rotation={[Math.PI / 2, 0, 0]}>
                      <group name='Object_6' />
                    </group>
                  </group>
                  <group
                    name='Plane'
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={[399.455, 399.454, 399.454]}
                  />
                </group>
              </group>
            </group>
          </group>
          <mesh
            name='Cylinder003'
            castShadow
            receiveShadow
            geometry={nodes.Cylinder003.geometry}
            material={materials['Material.001']}
            position={[0, 3.09, 0]}
            rotation={[1.625, 0, 0]}
          />
        </group>
      </RigidBody>
    </group>
  )
}

useGLTF.preload('/windmill.glb')
