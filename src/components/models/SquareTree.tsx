/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Tree: THREE.Mesh
    Cube: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube025: THREE.Mesh
  }
  materials: {
    ['wood.005']: THREE.MeshStandardMaterial
    ['tree.001']: THREE.MeshStandardMaterial
    ['tree.002']: THREE.MeshStandardMaterial
    ['tree.003']: THREE.MeshStandardMaterial
    ['tree.004']: THREE.MeshStandardMaterial
    ['tree.005']: THREE.MeshStandardMaterial
    ['tree.006']: THREE.MeshStandardMaterial
    ['tree.007']: THREE.MeshStandardMaterial
    ['tree.008']: THREE.MeshStandardMaterial
    ['tree.009']: THREE.MeshStandardMaterial
    ['tree.010']: THREE.MeshStandardMaterial
    ['tree.011']: THREE.MeshStandardMaterial
    ['tree.012']: THREE.MeshStandardMaterial
    tree: THREE.MeshStandardMaterial
  }
}

export function SquareTree(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/model.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Tree.geometry}
        material={materials['wood.005']}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials['tree.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials['tree.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube003.geometry}
          material={materials['tree.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004.geometry}
          material={materials['tree.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube005.geometry}
          material={materials['tree.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube006.geometry}
          material={materials['tree.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube007.geometry}
          material={materials['tree.007']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube008.geometry}
          material={materials['tree.008']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube009.geometry}
          material={materials['tree.009']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube010.geometry}
          material={materials['tree.010']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube011.geometry}
          material={materials['tree.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube012.geometry}
          material={materials['tree.012']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube025.geometry}
          material={materials.tree}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/model.gltf')
