/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { RapierRigidBody, RigidBody } from '@react-three/rapier'
import { useFrame } from '@react-three/fiber'
import { Vector3 } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder002_Madeira_0: THREE.Mesh
    Cylinder002_Pedra_0: THREE.Mesh
    Cube001_Madeira_0: THREE.Mesh
    Cube001_Tecido_0: THREE.Mesh
  }
  materials: {
    Madeira: THREE.MeshStandardMaterial
    Pedra: THREE.MeshStandardMaterial
    ['Madeira.001']: THREE.MeshStandardMaterial
    ['Tecido.001']: THREE.MeshStandardMaterial
  }
}

export function WindmillBlades(props: JSX.IntrinsicElements['group']) {
  const windmillBladesRotation = useRef<RapierRigidBody>(null!)
  const { nodes, materials } = useGLTF('/Windmill_blades.glb') as GLTFResult

  const speed = 1 / 2
  useFrame(({ clock }) => {
    if (windmillBladesRotation.current) {
      const elapsedTime = clock.getElapsedTime()

      const dx = Math.sin(elapsedTime * speed)
      const dz = Math.cos(elapsedTime * speed)

      const angle = Math.atan2(dx, dz)
      const quaternion = new THREE.Quaternion()
      quaternion.setFromEuler(new THREE.Euler(0, (Math.PI / 64) * -48, angle, 'YXZ'))

      windmillBladesRotation.current.setNextKinematicRotation(quaternion)
    }
  })
  return (
    <RigidBody
      ref={windmillBladesRotation}
      type={'kinematicPosition'}
      colliders={'trimesh'}
      scale={[4, 4, 4]}
      position={[-48, 17.9, -36.2]}
    >
      <group {...props} dispose={null}>
        <group name='Scene'>
          <group
            name='Sketchfab_model'
            position={[0, -4.597, 1.217]}
            rotation={[-Math.PI / 2, 0, 0]}
          >
            <group
              name='e970439468ec4f669fc306908d57054efbx'
              rotation={[Math.PI / 2, 0, 0]}
              scale={0.01}
            >
              <group name='Object_2'>
                <group name='RootNode'>
                  <group
                    name='Camera001'
                    position={[735.889, 495.831, 692.579]}
                    rotation={[-Math.PI, 0.756, 2.68]}
                    scale={100}
                  >
                    <group name='Object_8' />
                  </group>
                  <group
                    name='Cube001'
                    position={[0, 458.332, -137.054]}
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                  />
                  <group
                    name='Cylinder'
                    position={[0, 75.789, 0]}
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                  />
                  <group
                    name='Cylinder001'
                    position={[25.005, 49.1, -101.779]}
                    rotation={[-Math.PI, 0, 0]}
                    scale={8.039}
                  />
                  <group
                    name='Cylinder002'
                    position={[0, 458.332, -96.384]}
                    rotation={[-Math.PI, 0, 0]}
                    scale={23.999}
                  >
                    <mesh
                      name='Cylinder002_Madeira_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder002_Madeira_0.geometry}
                      material={materials.Madeira}
                    />
                    <mesh
                      name='Cylinder002_Pedra_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cylinder002_Pedra_0.geometry}
                      material={materials.Pedra}
                    />
                  </group>
                  <group
                    name='Light001'
                    position={[263.866, 590.386, -100.545]}
                    rotation={[1.89, 0.881, -2.045]}
                    scale={100}
                  >
                    <group name='Object_5' rotation={[Math.PI / 2, 0, 0]}>
                      <group name='Object_6' />
                    </group>
                  </group>
                  <group
                    name='Plane'
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={[399.455, 399.454, 399.454]}
                  />
                </group>
              </group>
            </group>
          </group>
          <group
            name='Sketchfab_model001'
            position={[0, -4.597, 1.217]}
            rotation={[-Math.PI / 2, 0, 0]}
          >
            <group
              name='e970439468ec4f669fc306908d57054efbx001'
              rotation={[Math.PI / 2, 0, 0]}
              scale={0.01}
            >
              <group name='Object_2001'>
                <group name='RootNode001'>
                  <group
                    name='Cube002'
                    position={[0, 458.332, -137.054]}
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                  >
                    <mesh
                      name='Cube001_Madeira_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cube001_Madeira_0.geometry}
                      material={materials['Madeira.001']}
                    />
                    <mesh
                      name='Cube001_Tecido_0'
                      castShadow
                      receiveShadow
                      geometry={nodes.Cube001_Tecido_0.geometry}
                      material={materials['Tecido.001']}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </RigidBody>
  )
}

useGLTF.preload('/Windmill_blades.glb')
